#! /usr/bin/python -E
# Authors: Petr Viktorin <pviktori@redhat.com>
#
# Copyright (C) 2012  Red Hat
# see file 'COPYING' for use and warranty information
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

from ipaserver.install.ipa_replica_prepare import ReplicaPrepare

ReplicaPrepare.run_cli()


###################################################################################
exit()

import shutil, pwd
from ipapython.ipa_log_manager import *
import traceback
import krbV

from ipapython import ipautil
from ipaserver.install import dsinstance
from ipaserver.install.bindinstance import add_zone, add_fwd_rr, add_ptr_rr
from ipaserver.install.installutils import resolve_host, BadHostError, HostLookupError
from ipalib import util




def main():

    if options.ip_address:
        print "Adding DNS records for %s" % replica_fqdn
        api.Backend.ldap2.connect(bind_dn=DN(('cn', 'Directory Manager')), bind_pw=dirman_password)

        domain = replica_fqdn.split(".")
        name = domain.pop(0)
        domain = ".".join(domain)

        ip = options.ip_address
        ip_address = str(ip)

        if options.reverse_zone:
            reverse_zone = bindinstance.normalize_zone(options.reverse_zone)
        else:
            reverse_zone = bindinstance.find_reverse_zone(ip)
            if reverse_zone is None and not options.no_reverse:
                reverse_zone = bindinstance.get_reverse_zone_default(ip)

        try:
            add_zone(domain)
        except errors.PublicError, e:
            sys.exit("Could not create forward DNS zone for the replica: %s" % e)

        try:
            add_fwd_rr(domain, name, ip_address)
        except errors.PublicError, e:
            sys.exit("Could not add forward DNS record for the replica: %s" % e)

        if reverse_zone is not None:
            print "Using reverse zone %s" % reverse_zone
            try:
                add_zone(reverse_zone)
            except errors.PublicError, e:
                sys.exit("Could not create reverse DNS zone for the replica: %s" % e)
            try:
                add_ptr_rr(reverse_zone, ip_address, replica_fqdn)
            except errors.PublicError, e:
                sys.exit("Could not add reverse DNS record for the replica: %s" % e)
